{"ast":null,"code":"import _defineProperty from\"/Users/ghost/Developer/react/ict-page/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/ghost/Developer/react/ict-page/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/ghost/Developer/react/ict-page/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from\"react\";import{notification}from\"antd\";import axios from\"axios\";export var useForm=function useForm(validate){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),values=_useState2[0],setValues=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),errors=_useState4[0],setErrors=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),shouldSubmit=_useState6[0],setShouldSubmit=_useState6[1];var openNotificationWithIcon=function openNotificationWithIcon(){notification[\"success\"]({message:\"Success\",description:\"Your message has been sent!\"});};var handleSubmit=function handleSubmit(event){event.preventDefault();setErrors(validate(values));// Your url for API\nvar url=\"\";if(Object.keys(values).length===3){axios.post(url,_objectSpread({},values)).then(function(){setShouldSubmit(true);});}};useEffect(function(){if(Object.keys(errors).length===0&&shouldSubmit){setValues(\"\");openNotificationWithIcon();}},[errors,shouldSubmit]);var handleChange=function handleChange(event){event.persist();setValues(function(values){return _objectSpread(_objectSpread({},values),{},_defineProperty({},event.target.name,event.target.value));});setErrors(function(errors){return _objectSpread(_objectSpread({},errors),{},_defineProperty({},event.target.name,\"\"));});};return{handleChange:handleChange,handleSubmit:handleSubmit,values:values,errors:errors};};","map":{"version":3,"sources":["/Users/ghost/Developer/react/ict-page/src/common/utils/useForm.tsx"],"names":["useState","useEffect","notification","axios","useForm","validate","values","setValues","errors","setErrors","shouldSubmit","setShouldSubmit","openNotificationWithIcon","message","description","handleSubmit","event","preventDefault","url","Object","keys","length","post","then","handleChange","persist","target","name","value"],"mappings":"kXAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,YAAT,KAA6B,MAA7B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,QAAD,CAAmB,CACxC,cAA4BL,QAAQ,CAAC,EAAD,CAApC,wCAAOM,MAAP,eAAeC,SAAf,eACA,eAA4BP,QAAQ,CAAC,EAAD,CAApC,yCAAOQ,MAAP,eAAeC,SAAf,eACA,eAAwCT,QAAQ,CAAC,KAAD,CAAhD,yCAAOU,YAAP,eAAqBC,eAArB,eAEA,GAAMC,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,EAAM,CACrCV,YAAY,CAAC,SAAD,CAAZ,CAAwB,CACtBW,OAAO,CAAE,SADa,CAEtBC,WAAW,CAAE,6BAFS,CAAxB,EAID,CALD,CAOA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAA+C,CAClEA,KAAK,CAACC,cAAN,GACAR,SAAS,CAACJ,QAAQ,CAACC,MAAD,CAAT,CAAT,CACA;AACA,GAAMY,CAAAA,GAAG,CAAG,EAAZ,CACA,GAAIC,MAAM,CAACC,IAAP,CAAYd,MAAZ,EAAoBe,MAApB,GAA+B,CAAnC,CAAsC,CACpClB,KAAK,CACFmB,IADH,CACQJ,GADR,kBAEOZ,MAFP,GAIGiB,IAJH,CAIQ,UAAM,CACVZ,eAAe,CAAC,IAAD,CAAf,CACD,CANH,EAOD,CACF,CAdD,CAgBAV,SAAS,CAAC,UAAM,CACd,GAAIkB,MAAM,CAACC,IAAP,CAAYZ,MAAZ,EAAoBa,MAApB,GAA+B,CAA/B,EAAoCX,YAAxC,CAAsD,CACpDH,SAAS,CAAC,EAAD,CAAT,CACAK,wBAAwB,GACzB,CACF,CALQ,CAKN,CAACJ,MAAD,CAASE,YAAT,CALM,CAAT,CAOA,GAAMc,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACR,KAAD,CAAgD,CACnEA,KAAK,CAACS,OAAN,GACAlB,SAAS,CAAC,SAACD,MAAD,wCACLA,MADK,wBAEPU,KAAK,CAACU,MAAN,CAAaC,IAFN,CAEaX,KAAK,CAACU,MAAN,CAAaE,KAF1B,IAAD,CAAT,CAIAnB,SAAS,CAAC,SAACD,MAAD,wCAAkBA,MAAlB,wBAA2BQ,KAAK,CAACU,MAAN,CAAaC,IAAxC,CAA+C,EAA/C,IAAD,CAAT,CACD,CAPD,CASA,MAAO,CACLH,YAAY,CAAZA,YADK,CAELT,YAAY,CAAZA,YAFK,CAGLT,MAAM,CAANA,MAHK,CAILE,MAAM,CAANA,MAJK,CAAP,CAMD,CAlDM","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { notification } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nexport const useForm = (validate: any) => {\r\n  const [values, setValues] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const [shouldSubmit, setShouldSubmit] = useState(false);\r\n\r\n  const openNotificationWithIcon = () => {\r\n    notification[\"success\"]({\r\n      message: \"Success\",\r\n      description: \"Your message has been sent!\",\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    setErrors(validate(values));\r\n    // Your url for API\r\n    const url = \"\";\r\n    if (Object.keys(values).length === 3) {\r\n      axios\r\n        .post(url, {\r\n          ...values,\r\n        })\r\n        .then(() => {\r\n          setShouldSubmit(true);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && shouldSubmit) {\r\n      setValues(\"\");\r\n      openNotificationWithIcon();\r\n    }\r\n  }, [errors, shouldSubmit]);\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n    setErrors((errors) => ({ ...errors, [event.target.name]: \"\" }));\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values,\r\n    errors,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}